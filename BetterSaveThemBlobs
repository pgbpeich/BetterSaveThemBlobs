#!/bin/bash
echo BetterSaveThemBlobs By jst9n
echo Thanks @tihmstar for tsschecker_macos
echo Thanks to @iTrickzGG and @2klasic for the idea

echo Make sure these certain dependencies are installed to run tsschecker_macos

echo " "
echo " "
echo "Choose your Options"
echo "Do you want to:"
echo "======================================="
echo "[1] Install tsschecker dependencies"
echo "[2] Save shsh2 blobs with tsschecker"
echo "[3] Exit"
echo "======================================="
read e
if [ "$e" = "1" ]
	then
	 # Ask for the administrator password upfront.
        sudo -v

        # Keep-alive: update existing `sudo` time stamp until the script has finished.
        while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
brew install curl
brew install git
 cd ~/
 	git clone http://git.libimobiledevice.org/libplist.git
	git clone https://github.com/derobi/libcrippy.git
	git clone https://github.com/derobi/libpartialzip.git
	sleep 3[s]
	echo "Installing libplist Dependencies"
	cd ~/libplist
	./autogen.sh
	make
	sudo make install
echo "Installing Libcrippy Dependencies"
cd ~/libcrippy/
	chmod +x autogen.sh
	./autogen.sh && make && sudo make install
echo "Installing libpartialzip Dependencies"
cd ~/libpartialzip
	chmod +x autogen.sh
 ./autogen.sh && make && sudo make install

 rm -rf ~/{lib*,curl}
 clear

elif [ "$e" = "2" ]
		then
		# Ask for the administrator password upfront.
        sudo -v

        # Keep-alive: update existing `sudo` time stamp until the script has finished.
        while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
				#Downloading tsschecker..
				cd ~/Desktop
				curl -O http://api.tihmstar.net/builds/tsschecker/tsschecker-latest.zip
				unzip ./tsschecker-latest.zip
				mkdir tsschecker-latest
				mv {tsschecker*,*.pem,*.txt,LICENSE} tsschecker-latest
				#changing dir..
				cd ~/Desktop/tsschecker-latest
				chmod +x tsschecker*

				#turning tsschecker into a executable..
				if [ ! -e ~/Desktop/tsschecker_macos ]; then
				    chmod +x tsschecker_macos
fi



#checking for tsschecker_macos..
if [ ! -e ~/Desktop/tsschecker_macos ]; then
    echo "Tsschecker_macos Doesnt Exist, Move tsschecker_macos to your desktop!"

exit
fi

#plug your device info here!

echo "model=YOUR DEVICE MODEL (Example=iPhone7,2)"
read model

echo "boardconfig=YOUR BOARDCONFIG"
read board
echo "ecid=YOUR OWN ECID"
read ecid 

#always saves latest baseband!
./tsschecker_macos -d "$model" --boardconfig "$board" -l -e "$ecid"2 -s --save-path ~/Desktop

elif [ "$e" = "3" ]
		then

killall Finder
killall Terminal

			else


	killall Terminal

fi
